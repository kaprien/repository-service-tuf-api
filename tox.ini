[tox]
envlist = py310,py311,requirements,lint,test,test-docs

[testenv]
setenv =
    RSTUF_BOOTSTRAP_NODE = true
    RSTUF_BROKER_SERVER = "fakeserver"
    RSTUF_REDIS_SERVER = "redis://fakeredis"

deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/requirements-dev.txt

[testenv:lint]
deps = pre-commit
commands =
    pre-commit run flake8 --all-files --show-diff-on-failure
    pre-commit run isort --all-files --show-diff-on-failure
    pre-commit run black --all-files --show-diff-on-failure
    pre-commit run bandit --all-files --show-diff-on-failure

[testenv:test-docs]
allowlist_externals =
    rm
    python
    diff
    sh

commands =
    python -c "import app; app.export_swagger_json('docs/swagger.json.check')"
    diff docs/swagger.json docs/swagger.json.check
    sh ./docs/update-swagger-ui.sh check

commands_post =
    rm docs/swagger.json.check

[testenv:docs]
deps = -r{toxinidir}/docs/requirements.txt
allowlist_externals =
    rm
    plantuml
    sh
commands =
    plantuml -Djava.awt.headless=true -o ../source/_static/ -tpng docs/diagrams/*.puml
    python -c "import app; app.export_swagger_json('docs/swagger.json')"
    sh ./docs/update-swagger-ui.sh
	sphinx-apidoc -f -o  docs/source/devel/ repository_service_tuf_api
	sphinx-build -E -W -b html docs/source docs/build/html

[testenv:test]
commands =
    coverage run --omit='tests/*' -m pytest tests/unit/ -vv
    coverage xml -i
    coverage report

[testenv:requirements]
description="Check if `make requirements` is up-to-date."
deps = pipenv
skipsdist=false
allowlist_externals =
    bash
commands =
    pipenv --version
    bash -c 'diff -w requirements.txt <(pipenv requirements)'
    bash -c 'diff -w requirements-dev.txt <(pipenv requirements --dev)'

[gh-actions]
python =
    3.10: py310,pep8,lint,requirements,test,test-docs
    3.11: py311,pep8,lint,requirements,test,test-docs
