name: CD

on:
  workflow_dispatch:
  push:
    tags:
      - v*

permissions:
  contents: write

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.gh-release.outputs.id }}
    steps:
      - name: Checkout release tag
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@8b122486cedac8393e77aa9734c3528886e4a1a8

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6

      - name: Build and Export Docker Image
        uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94
        with:
          context: .
          push: false
          tags: ghcr.io/vmware/repository-service-tuf-api:${{ github.ref_name }}
          outputs: type=docker,dest=/tmp/repository-service-tuf-api.${{ github.ref_name }}.tar

      - id: gh-release
        name: Publish GitHub release candidate
        uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5
        with:
          name: ${{ github.ref_name }}-rc
          tag_name: ${{ github.ref }}
          body: "Release waiting for review..."
          files: /tmp/repository-service-tuf-api.${{ github.ref_name }}.tar

      - name: Store build artifacts
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
        with:
          name: build-artifacts
          path: /tmp/repository-service-tuf-api.${{ github.ref_name }}.tar

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    environment: release
    steps:
      - name: Fetch build artifacts
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: build-artifacts
          path: /tmp

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Docker Image on GitHub Registry
        run: |
          docker load -i /tmp/repository-service-tuf-api.${{ github.ref_name }}.tar
          docker push ghcr.io/vmware/repository-service-tuf-api:${{ github.ref_name }}
          docker tag ghcr.io/vmware/repository-service-tuf-api:${{ github.ref_name }} ghcr.io/vmware/repository-service-tuf-api:latest
          docker push ghcr.io/vmware/repository-service-tuf-api:latest

      - name: Finalize GitHub release
        uses: actions/github-script@d556feaca394842dc55e4734bf3bb9f685482fa0
        with:
          script: |
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: '${{ needs.build.outputs.release_id }}',
              name: '${{ github.ref_name }}',
              body: 'Docker Image available on [GitHub Packages](https://github.com/orgs/vmware/packages/container/package/repository-service-tuf-api)'
            })